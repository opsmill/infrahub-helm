# yamllint disable rule:line-length
---
global:
  # -- Kubernetes cluster domain
  kubernetesClusterDomain: cluster.local
  # -- Repository for Infrahub images
  infrahubRepository: opsmill/infrahub
  # -- Default image pull policy
  imagePullPolicy: IfNotPresent
  # -- Labels to use for all installed Kubernetes resources
  commonLabels: {}
  # -- Annotations to use for all installed Kubernetes resources
  commonAnnotations: {}
  # -- Labels to use for all configured pods
  podLabels: {}

# ----------- Cache -----------
redis:
  enabled: true
  nameOverride: cache
  architecture: standalone
  auth:
    enabled: false
  master:
    persistence:
      enabled: false
    service:
      ports:
        redis: 6379

# ----------- Database -----------
neo4j:
  enabled: true
  nameOverride: database
  neo4j:
    name: "infrahub"
    edition: "community"
    password: "admin"
    minimumClusterSize: 1
    acceptLicenseAgreement: "no"
    resources: {}
  volumes:
    data:
      mode: "volume"
      volume:
        emptyDir: {}
  services:
    neo4j:
      enabled: false
      ports:
        bolt:
          enabled: true
          port: 7687
          targetPort: 7687
    admin:
      enabled: false
  config:
    dbms.security.auth_minimum_password_length: "4"
    dbms.security.procedures.unrestricted: apoc.*
  logInitialPassword: false

# ----------- Infrahub Task Worker -----------
infrahubTaskWorker:
  # -- Number of replicas of the Infrahub Task Worker
  replicas: 2
  # -- Resources request and limit to apply for the task worker
  resources: {}
  infrahubTaskWorker:
    # -- Container arguments for the task worker
    args:
      - prefect
      - worker
      - start
      - --type
      - infrahubasync
      - --pool
      - infrahub-worker
      - --with-healthcheck
    # -- Container environment for the task worker
    env:
      INFRAHUB_CACHE_PORT: 6379
      INFRAHUB_DB_TYPE: neo4j
      INFRAHUB_LOG_LEVEL: DEBUG
      INFRAHUB_PRODUCTION: "false"
      INFRAHUB_API_TOKEN: 06438eb2-8019-4776-878c-0941b1f1d1ec
      INFRAHUB_TIMEOUT: "60"
      INFRAHUB_GIT_REPOSITORIES_DIRECTORY: "/opt/infrahub/git"
      INFRAHUB_WORKFLOW_ADDRESS: prefect-server
      INFRAHUB_WORKFLOW_PORT: 4200
      PREFECT_API_URL: "http://prefect-server:4200/api"
      PREFECT_WORKER_QUERY_SECONDS: 3
      PREFECT_AGENT_QUERY_INTERVAL: 3
    # -- Image pull policy for the task worker
    imagePullPolicy: Always
    # -- Image registry to use for the task worker
    imageRegistry: registry.opsmill.io

# ----------- Infrahub Server -----------
infrahubServer:
  # -- Service type for the Infrahub API server
  type: ClusterIP
  ingress:
    # -- Whether to enable Ingress for the Infrahub API server
    enabled: true
    # -- Hostname to configure for the ingress
    hostname: infrahub-cluster.local
    # -- Annotations to configure on the ingress
    annotations:
  persistence:
    # -- Whether to enable data persistence for the Infrahub API server
    enabled: true
    size: 1Gi
    accessMode: ReadWriteOnce
  # -- Resources request and limit to apply for the task worker
  resources: {}
  infrahubServer:
    # -- Container arguments for the API server
    args:
      - gunicorn
      - --config
      - /source/backend/infrahub/serve/gunicorn_config.py
      - -w
      - "2"
      - --logger-class
      - infrahub.serve.log.GunicornLogger
      - infrahub.server:app
    # -- Container environment for the API server
    env:
      INFRAHUB_ALLOW_ANONYMOUS_ACCESS: "true"
      INFRAHUB_CACHE_PORT: 6379
      INFRAHUB_DB_TYPE: neo4j
      INFRAHUB_LOG_LEVEL: INFO
      INFRAHUB_PRODUCTION: "false"
      INFRAHUB_INITIAL_ADMIN_TOKEN: 06438eb2-8019-4776-878c-0941b1f1d1ec
      INFRAHUB_SECURITY_SECRET_KEY: 327f747f-efac-42be-9e73-999f08f86b92
      INFRAHUB_GIT_REPOSITORIES_DIRECTORY: "/opt/infrahub/git"
      INFRAHUB_WORKFLOW_ADDRESS: prefect-server
      INFRAHUB_WORKFLOW_PORT: 4200
      PREFECT_API_URL: "http://prefect-server:4200/api"
    # -- Image pull policy for the API server
    imagePullPolicy: Always
    # -- Image registry to use for the API server
    imageRegistry: registry.opsmill.io
  ports:
    - name: "interface"
      # -- Port on which to expose the API server service
      port: 8000
      # -- Port on which Infrahub API server listens
      targetPort: 8000

infrahubDemoData:
  # -- Whether to enable loading of demo data
  enabled: false
  # -- Backoff limit for the Kubernetes job that will load the data
  backoffLimit: 4
  # -- Image registry to use for the Kubernetes job
  imageRegistry: registry.opsmill.io
  env:
    # -- Infrahub API token that will be used when loading the data
    INFRAHUB_API_TOKEN: 06438eb2-8019-4776-878c-0941b1f1d1ec
  # -- Container entrypoint for the demo data loading job
  command:
    - sh
    - -c
    - "infrahubctl schema load models/base --wait 30 && infrahubctl run models/infrastructure_edge.py && infrahubctl menu load models/base_menu.yml && infrahubctl repository add demo-edge https://github.com/opsmill/infrahub-demo-edge --read-only"

# ----------- Mesage Queue (Rabbit MQ) -----------
rabbitmq:
  enabled: true
  nameOverride: message-queue
  persistence:
    enabled: false
  auth:
    username: infrahub
    password: infrahub
  metrics:
    enabled: true
  startupProbe:
    enabled: true

# ----------- NATS Server -----------
nats:
  enabled: false
  config:
    jetstream:
      enabled: true

# ------------- Prefect -------------
prefect-server:
  enabled: true
  global:
    prefect:
      image:
        repository: registry.opsmill.io/opsmill/infrahub
        prefectTag: 1.2.0
  server:
    command:
      - /usr/bin/tini
      - -g
      - --
    args:
      - uvicorn
      - --host
      - "0.0.0.0"
      - --port
      - "4200"
      - --factory
      - infrahub.prefect_server.app:create_infrahub_prefect
    env:
      - name: PREFECT_UI_SERVE_BASE
        value: /
  serviceAccount:
    create: false
  postgresql:
    enabled: true
    primary:
      persistence:
        enabled: false
